version: '3.2'

services:
  elasticsearch:
    container_name: elk-elasticsearch
    image: elasticsearch:$ELK_VERSION
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch_data
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
    networks:
      - elk

  logstash:
    container_name: elk-logstash
    image: logstash:$ELK_VERSION
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
      LOGSTASH_JDBC_URL: jdbc:sqlserver://10.37.91.213:1433;databaseName=master;integratedSecurity=false;
      LOGSTASH_JDBC_DRIVER: com.microsoft.sqlserver.jdbc.SQLServerDriver
      LOGSTASH_JDBC_DRIVER_JAR_LOCATION: /usr/share/logstash/logstash-core/lib/jars/mssql-jdbc-7.4.1.jre12.jar
      LOGSTASH_JDBC_USERNAME: ordermanager
      LOGSTASH_JDBC_PASSWORD: niMdAsySredrO
      LOGSTASH_ELASTICSEARCH_HOST: http://elasticsearch:9200
    networks:
      - elk
    depends_on:
       - elasticsearch

  kibana:
    container_name: elk-kibana
    image: kibana:$ELK_VERSION
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: changeme
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

# 額外加入
  filebeat:
    container_name: elk-filebeat
    image: docker.elastic.co/beats/filebeat:$ELK_VERSION
    command: filebeat -e -strict.perms=false
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./filebeat/sample_log:/usr/share/filebeat/logs
    networks:
      - elk
    links:
       - elasticsearch
       - kibana
    depends_on:
       - elasticsearch
       - kibana
       - logstash

  metricbeat:
    container_name: elk-metricbeat
    image: docker.elastic.co/beats/metricbeat:$ELK_VERSION
    user: root
    networks:
      - elk
    volumes:
      - .\metricbeat\metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - .\metricbeat\modules.d\:/usr/share/metricbeat/modules.d/
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /var/run/docker.sock:/var/run/docker.sock
      # - :/hostfs:ro
      # - c:\:/rootfs:ro
      - .\metricbeat\:/rootfs:ro
      # - metricbeat:/usr/share/metricbeat/data
    environment:
      ELASTICSEARCH_HOST: http://elasticsearch:9200
      KIBANA_HOST: http://kibana:5601
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: changeme
    # disable strict permission checks
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]
    links:
      - elasticsearch
      - kibana
    depends_on:
      - elasticsearch
      - kibana
      - logstash

  apm_server:
    container_name: elk_apm_server
    image: apm-server:$ELK_VERSION
    build:
      context: apm/
      args:
        ELK_VERSION: $ELK_VERSION
    command: /usr/share/apm-server/apm-server -e -c /usr/share/apm-server/apm-server.yml -E apm-server.host=apm_server:8200 --strict.perms=false
    volumes:
      - ./apm/config/apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
    healthcheck:
      test: curl  http://apm_server:8200/healthcheck >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "8200:8200"
    networks:
      - elk
    depends_on:
      - elasticsearch
      - kibana

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch_data:
  metricbeat:
